#!/usr/bin/python3

"""
A simple script for bulk retrieval of attachments from Launchpad bugs.
"""

import os
import sys
import argparse
from pathlib import Path
from shutil import copyfileobj
from urllib.request import urlopen

from launchpadlib.launchpad import Launchpad


def main(args=None):
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument(
        'bug', type=int,
        help="The ID of the bug to retrieve all patches or attachments from")
    parser.add_argument(
        '--type', choices=('patches', 'all'), default='patches',
        help="The type of attachments to retrieve; defaults to %(default)s")
    parser.add_argument(
        '--cache-dir', default=Path.home() / '.cache' / 'ubuntu-dev-tools',
        help=argparse.SUPPRESS)
    config = parser.parse_args(args)
    config.filter = {
        'patches': lambda a: a.type == 'Patch',
        'all':     lambda a: True,
    }[config.type]

    try:
        lp = Launchpad.login_anonymously(
            'get-patches', 'production', str(config.cache_dir),
            version='devel')
        bug = lp.bugs[config.bug]
        attachments = {
            attachment.title: attachment
            for attachment in bug.attachments_collection
        }
        for filename, attachment in attachments.items():
            if config.filter(attachment):
                print(f'Downloading {filename}', flush=True)
                with (
                    urlopen(attachment.data_link) as source,
                    open(filename, 'wb') as target
                ):
                    copyfileobj(source, target)
    except Exception as err:
        if int(os.environ.get('DEBUG', '0')):
            raise
        else:
            print(str(err), file=sys.stderr)
            return 1

    return 0


if __name__ == '__main__':
    sys.exit(main())
